{"version":3,"sources":["theme.js","components/Post/Post.styled.js","components/CategoryList/CategoryList.styled.js","components/CategoryList/index.js","components/CategoryList/CategoryList.js","components/Post/index.js","components/Post/Post.js","components/Informer/Informer.styled.js","components/Informer/index.js","components/Informer/Informer.js","components/Button/Button.styled.js","components/Button/index.js","components/Button/Button.js","views/Article.js","components/Header/Header.styled.js","components/Header/index.js","components/Header/Header.js","components/PostPreview/PostPreview.styled.js","components/Link/Link.styled.js","components/Link/index.js","components/Link/Link.js","components/PostPreview/index.js","components/PostPreview/PostPreview.js","components/Footer/Footer.styled.js","components/Footer/index.js","components/Footer/Footer.js","views/Home.js","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.js","components/PostsFilterForm/PostsFilterForm.styled.js","components/PostsFilterForm/index.js","components/PostsFilterForm/PostsFilterForm.js","views/FilteredPosts.js","helper.js","views/Page404.js","components/PageRoutes/index.js","components/PageRoutes/PageRoutes.js","components/AnimatedRoutes/AnimatedRoutes.styled.js","components/AnimatedRoutes/index.js","components/AnimatedRoutes/AnimatedRoutes.js","App.js","reportWebVitals.js","prismic.js","index.js"],"names":["themeSettings","primaryHeadersColor","secondaryHeadersColor","primaryDecorativeColor","secondaryDecorativeColor","primaryBackgroundColor","secondaryBackgroundColor","fontToRead","primaryPostFont","secondaryPostFont","DefaultStyledPost","styled","div","theme","StyledPost","style","DefaultStyledCategoryList","ul","StyledCategoryList","Category","li","CategoryList","categories","map","relatedcategory","data","category_name","id","Post","postData","imgUrl","field","title","introduction","content","src","alt","image","DefaultStyledInformer","StyledInformer","Informer","children","DefaultStyledButton","button","StyledButton","Button","onClick","type","Article","article","useParams","usePrismicDocumentByUID","fetchLinks","state","navigate","useNavigate","prismicH","DefaultStyledHeader","header","StyledHeader","Avatar","props","url","Title","h1","Description","p","Header","description","avatar","DefaultStyledPostPreview","StyledPostPreview","h3","fprimaryPostFont","DefaultStyledLink","Link","StyledLink","linkTo","to","PostPreview","DefaultStyledFooter","footer","StyledFooter","Copyright","Footer","copyright","Home","useAllPrismicDocumentsByType","posts","slice","uid","width","margin","backgroundColor","DefaultStyledPagination","nav","StyledPagination","PageNumberList","PageNumber","Pagination","limit","path","page","category","year","month","length","begin","end","pages","Math","ceil","additionalPath","defaultStyle","color","textDecoration","activeStyle","fontWeight","links","Array","fill","item","index","isActive","DefaultStyledPostsFilterForm","StyledPostsFilterForm","PostsFilterForm","defaultPath","useState","postCategory","setPostCategory","publishDate","setPublishDate","convertedDate","split","join","onSubmit","e","preventDefault","toLowerCase","value","onChange","target","FilteredPosts","filteredPosts","filteredData","filter","post","find","sortByCategory","first_publication_date","sortByDate","sortPosts","Page404","time","setTime","useEffect","intervalId","setInterval","actualTime","clearInterval","PageRoutes","location","element","DefaultStyledAnimatedRoutes","StyledAnimatedRoutes","AnimatedRoutes","useLocation","TransitionGroup","CSSTransition","classNames","timeout","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","prismic","accessToken","routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ab96c3b.chunk.js","sourcesContent":["const themeSettings = {\r\n  primaryHeadersColor: '#454545',\r\n  secondaryHeadersColor: 'wheat',\r\n  primaryDecorativeColor: '#93B7BE',\r\n  secondaryDecorativeColor: '#785964',\r\n  primaryBackgroundColor: '#F1FFFA',\r\n  secondaryBackgroundColor: 'rgba(0,0,0,0.1)',\r\n  fontToRead: '\\'Merriweather\\', serif',\r\n  primaryPostFont: '\\'Lato\\', sans-serif',\r\n  secondaryPostFont: '\\'PT Serif\\', serif'\r\n}\r\n\r\nexport default themeSettings\r\n","import styled from 'styled-components'\r\nconst DefaultStyledPost = styled.div`\r\n  --primary-h: ${({ theme }) => theme.primaryHeadersColor};\r\n  --secondary-h: ${({ theme }) => theme.secondaryHeadersColor};\r\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\r\n  --secondary-dec: ${({ theme }) => theme.secondaryDecorativeColor};\r\n  --secondary-bg: ${({ theme }) => theme.secondaryBackgroundColor};\r\n  --font-read: ${({ theme }) => theme.fontToRead};\r\n\r\n  box-sizing: border-box;\r\n  background-color: var(--secondary-bg);\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n\r\n  & h2 {\r\n    margin: 0;\r\n    text-align: center;\r\n    padding: 2.5rem 0;\r\n    background-color: var(--secondary-dec);\r\n    color: var(--secondary-h);\r\n    font-family: var(--font-read);\r\n    font-weight: 700;\r\n  }\r\n\r\n  & h4 {\r\n    color: var(--primary-h);\r\n    font-family: var(--font-read);\r\n    padding: 0 1rem;\r\n  }\r\n\r\n  & p {\r\n    font-family: var(--font-read);\r\n    padding: 0 1rem;\r\n    font-weight: 300;\r\n  }\r\n\r\n  & img {\r\n    object-fit: cover;\r\n    margin: 1.25rem auto;\r\n    display: block;\r\n    width: auto;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    max-height: 600px;\r\n  }\r\n`\r\n\r\nconst StyledPost = styled(DefaultStyledPost)(({ style }) => style)\r\n\r\nexport { StyledPost }\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledCategoryList = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  padding: 0;\r\n`\r\n\r\nconst StyledCategoryList = styled(DefaultStyledCategoryList)(\r\n  ({ style }) => style\r\n)\r\n\r\nconst Category = styled.li`\r\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\r\n\r\n  padding: 0.25rem 1.25rem;\r\n  font-weight: bold;\r\n  background-color: var(--primary-dec);\r\n`\r\n\r\nexport { StyledCategoryList, Category }\r\n","import CategoryList from './CategoryList'\r\n\r\nexport default CategoryList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledCategoryList, Category } from './CategoryList.styled'\r\n\r\nconst CategoryList = ({ style, categories }) => {\r\n  return (\r\n    <StyledCategoryList style={style}>\r\n      {categories.map(({ relatedcategory }) => (\r\n        <Category key={relatedcategory.id}>\r\n          {relatedcategory.data.category_name}\r\n        </Category>\r\n      ))}\r\n    </StyledCategoryList>\r\n  )\r\n}\r\n\r\nCategoryList.propTypes = {\r\n  style: PropTypes.object,\r\n  categories: PropTypes.array\r\n}\r\n\r\nexport default CategoryList\r\n","import Post from './Post'\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledPost } from './Post.styled'\r\nimport { PrismicRichText } from '@prismicio/react'\r\nimport CategoryList from '../CategoryList'\r\n\r\nconst Post = ({ style, postData, imgUrl }) => {\r\n  return (\r\n    <StyledPost style={style}>\r\n      <>\r\n        <PrismicRichText field={postData.data.title} />\r\n        <PrismicRichText field={postData.data.introduction} />\r\n        <PrismicRichText field={postData.data.content} />\r\n        <img\r\n          src={imgUrl}\r\n          alt={postData.data.image.alt}\r\n        />\r\n        <CategoryList categories={postData.data.categories} />\r\n      </>\r\n    </StyledPost>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  style: PropTypes.object,\r\n  postData: PropTypes.object,\r\n  imgUrl: PropTypes.string\r\n}\r\n\r\nexport default Post\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledInformer = styled.div`\r\n  max-width: 1000px;\r\n  width: 100%;\r\n  margin: 2.5rem auto;\r\n  padding: 20vh 0.75rem 40vh 0.75rem;\r\n  box-sizing: border-box;\r\n  & p {\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst StyledInformer = styled(DefaultStyledInformer)(({ style }) => style)\r\n\r\nexport { StyledInformer }\r\n","import Informer from './Informer'\r\n\r\nexport default Informer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledInformer } from './Informer.styled'\r\n\r\nconst Informer = ({ style, children }) => {\r\n  return <StyledInformer styled={style}>{children}</StyledInformer>\r\n}\r\n\r\nInformer.propTypes = {\r\n  style: PropTypes.object,\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default Informer\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledButton = styled.button`\r\n  --secondary-dec: ${({ theme }) => theme.secondaryDecorativeColor};\r\n\r\n  width: 200px;\r\n  height: 35px;\r\n  background-color: var(--secondary-dec);\r\n  color: white;\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n`\r\n\r\nconst StyledButton = styled(DefaultStyledButton)(({ style }) => style)\r\n\r\nexport default StyledButton\r\n","import Button from './Button'\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport StyledButton from './Button.styled'\r\n\r\nconst Button = ({ onClick, style, type = 'button', children }) => {\r\n  return (\r\n    <StyledButton\r\n      style={style}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  style: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n  type: PropTypes.string\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport * as prismicH from '@prismicio/helpers'\r\nimport { usePrismicDocumentByUID } from '@prismicio/react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport Post from '../components/Post'\r\nimport Informer from '../components/Informer'\r\nimport Button from '../components/Button'\r\n\r\nconst Article = () => {\r\n  const { article } = useParams()\r\n  const [postData, { state }] = usePrismicDocumentByUID('post', article, {\r\n    fetchLinks: ['category.category_name']\r\n  })\r\n  const navigate = useNavigate()\r\n  const src = postData && prismicH.asImageSrc(postData.data.image)\r\n\r\n  const ChangeToPreviousPage = () => {\r\n    navigate(-1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {state === 'idle'\r\n        ? (\r\n          <Informer>\r\n            <p>Server is preparing article for you</p>\r\n          </Informer>\r\n          )\r\n        : state === 'loading'\r\n          ? (\r\n            <Informer>\r\n              <p>Loading article ...</p>\r\n            </Informer>\r\n            )\r\n          : state === 'failed'\r\n            ? (\r\n              <Informer>\r\n                <p>Error occurred!</p>\r\n              </Informer>\r\n              )\r\n            : (\r\n              <>\r\n                <Button onClick={ChangeToPreviousPage}>RETURN TO ARTICLES</Button>\r\n                <Post\r\n                  imgUrl={src}\r\n                  postData={postData}\r\n                />\r\n              </>\r\n              )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Article\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledHeader = styled.header`\r\n  --primary-h: ${({ theme }) => theme.primaryHeadersColor};\r\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\r\n  --secondary-dec: ${({ theme }) => theme.secondaryDecorativeColor};\r\n  --primary-bg: ${({ theme }) => theme.primaryBackgroundColor};\r\n\r\n  display: grid;\r\n  background: var(--primary-bg); // primary bg color: ;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n\r\n  @media (max-width: 767px) {\r\n    grid-template-areas:\r\n      'avatar'\r\n      'title'\r\n      'description';\r\n    padding: 1.2rem 1rem;\r\n    justify-items: center;\r\n    grid-template-columns: 1fr;\r\n    gap: 0 2.5rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-areas:\r\n      'avatar title'\r\n      'avatar  description';\r\n    padding: 1.25rem 10vw;\r\n  }\r\n`\r\n\r\nconst StyledHeader = styled(DefaultStyledHeader)(({ style }) => style)\r\n\r\nconst Avatar = styled.div`\r\n  grid-area: avatar;\r\n  height: 300px;\r\n  width: 300px;\r\n  border-radius: 50%;\r\n  background: ${props => `url(${props.url})`};\r\n  background-position: center;\r\n  background-size: cover;\r\n  @media (max-width: 767px) {\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin-right: 2rem;\r\n    justify-self: end;\r\n  }\r\n`\r\n\r\nconst Title = styled.h1`\r\n  color: var(--primary-h);\r\n  grid-area: title;\r\n  width: 100%;\r\n  max-width: 500px;\r\n\r\n  @media (max-width: 767px) {\r\n    text-align: center;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    align-self: center;\r\n  }\r\n`\r\n\r\nconst Description = styled.p`\r\n  grid-area: description;\r\n  width: 100%;\r\n  font-family: 'Lato', sans-serif;\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  line-height: 2rem;\r\n  max-width: 500px;\r\n  color: var(--primary-dec);\r\n\r\n  @media (max-width: 767px) {\r\n    border-bottom: 0.25rem solid var(--secondary-dec); // decorative effects color not font color\r\n    padding-bottom: 10px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    border-bottom: 0.125rem solid var(--secondary-dec); // decorative effects color not font color\r\n    justify-self: start;\r\n  }\r\n`\r\n\r\nexport { StyledHeader, Avatar, Title, Description }\r\n","import Header from './Header'\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledHeader, Avatar, Title, Description } from './Header.styled'\r\n\r\nconst Header = ({ style, title, description, avatar }) => {\r\n  return (\r\n    <StyledHeader style={style}>\r\n      <Avatar url={avatar}/>\r\n      <Title>{title}</Title>\r\n      <Description>\r\n        {description}\r\n      </Description>\r\n    </StyledHeader>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  style: PropTypes.object,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  avatar: PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledPostPreview = styled.article`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 1000px;\r\n\r\n  @media (max-width: 767px) {\r\n    padding: 1.2rem 1rem;\r\n  }\r\n  @media (min-width: 768px) {\r\n    margin: 0 auto;\r\n    padding: 1.25rem;\r\n  }\r\n`\r\n\r\nconst StyledPostPreview = styled(DefaultStyledPostPreview)(\r\n  ({ style }) => style\r\n)\r\n\r\nconst Title = styled.h3`\r\n  --primary-h: ${({ theme }) => theme.primaryHeadersColor};\r\n  --font-primary: ${({ theme }) => theme.fprimaryPostFont};\r\n  color: var(--primary-h);\r\n  font-size: 1.8rem;\r\n  width: 100%;\r\n  font-family: var(--font-primary);\r\n  margin-bottom: 0;\r\n\r\n  @media (max-width: 767px) {\r\n    text-align: center;\r\n  }\r\n  @media (min-width: 768px) {\r\n  }\r\n`\r\n\r\nconst Description = styled.p`\r\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\r\n  --font-secondary: ${({ theme }) => theme.secondaryPostFont};\r\n  width: 100%;\r\n  color: var(--primary-dec);\r\n  font-family: var(--font-secondary);\r\n  @media (max-width: 767px) {\r\n    font-size: 1.2rem;\r\n  }\r\n  @media (min-width: 768px) {\r\n    margin: 10px auto;\r\n    font-size: 1.4rem;\r\n  }\r\n`\r\n\r\nexport { StyledPostPreview, Title, Description }\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst DefaultStyledLink = styled(Link)`\r\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\r\n  --primary-bg: ${({ theme }) => theme.primaryBackgroundColor};\r\n\r\n  text-decoration: none;\r\n  max-width: 1000px;\r\n  color: black;\r\n  font-weight: bold;\r\n  padding: 0.5rem 0.75rem;\r\n  border: 0.25rem solid var(--primary-dec);\r\n  background-color: var(--primary-bg);\r\n  letter-spacing: 1px;\r\n  display: block;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 767px) {\r\n    margin: 0 auto;\r\n  }\r\n  @media (min-width: 768px) {\r\n  }\r\n`\r\n\r\nconst StyledLink = styled(DefaultStyledLink)(({ style }) => style)\r\n\r\nexport { StyledLink }\r\n","import Link from './Link'\r\n\r\nexport default Link\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledLink } from './Link.styled'\r\n\r\nconst Link = ({ style, linkTo, children }) => {\r\n  return (\r\n    <StyledLink\r\n      style={style}\r\n      to={linkTo}\r\n    >\r\n      {children}\r\n    </StyledLink>\r\n  )\r\n}\r\n\r\nLink.propTypes = {\r\n  style: PropTypes.object,\r\n  linkTo: PropTypes.string,\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default Link\r\n","import PostPreview from './PostPreview'\r\n\r\nexport default PostPreview\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledPostPreview, Title, Description } from './PostPreview.styled'\r\nimport StyledLink from '../Link'\r\n\r\nconst PostPreview = ({ style, title, introduction, url }) => {\r\n  return (\r\n    <StyledPostPreview style={style}>\r\n      <Title>{title}</Title>\r\n      <Description>{introduction}</Description>\r\n      <StyledLink linkTo={url}>Preview more</StyledLink>\r\n    </StyledPostPreview>\r\n  )\r\n}\r\n\r\nPostPreview.propTypes = {\r\n  style: PropTypes.object,\r\n  title: PropTypes.string,\r\n  introduction: PropTypes.string,\r\n  url: PropTypes.string\r\n}\r\n\r\nexport default PostPreview\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledFooter = styled.footer`\r\n  --primary-bg: ${({ theme }) => theme.primaryBackgroundColor};\r\n\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  padding: 1.25rem 10vw;\r\n  background: var(--primary-bg);\r\n`\r\n\r\nconst StyledFooter = styled(DefaultStyledFooter)(({ style }) => style)\r\n\r\nconst Copyright = styled.p`\r\n  text-align: center;\r\n`\r\n\r\nexport { StyledFooter, Copyright }\r\n","import Footer from './Footer'\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledFooter, Copyright } from './Footer.styled'\r\n\r\nconst Footer = ({ style, children, copyright }) => {\r\n  return (\r\n    <StyledFooter style={style}>\r\n      {children}\r\n      <Copyright>{copyright}</Copyright>\r\n    </StyledFooter>\r\n  )\r\n}\r\nFooter.propTypes = {\r\n  style: PropTypes.object,\r\n  children: PropTypes.node,\r\n  copyright: PropTypes.string\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport Header from '../components/Header'\r\nimport PostPreview from '../components/PostPreview'\r\nimport Footer from '../components/Footer'\r\nimport { useAllPrismicDocumentsByType } from '@prismicio/react'\r\nimport * as prismicH from '@prismicio/helpers'\r\nimport StyledLink from '../components/Link'\r\nimport Informer from '../components/Informer'\r\n\r\nexport const Home = () => {\r\n  const [posts, { state }] = useAllPrismicDocumentsByType('post', {\r\n    fetchLinks: ['category.category_name']\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        title={'Cosmoneus - Blog'}\r\n        description={'Blog made with passion to everything that surrounds us. Find life articles from various fields like.: Technologies, News, Travel ect.!'}\r\n        avatar={'https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80'}\r\n      />\r\n      {state === 'idle'\r\n        ? (\r\n          <Informer>\r\n            <p>Server is preparing article for you</p>\r\n          </Informer>\r\n          )\r\n        : state === 'loading'\r\n          ? (\r\n            <Informer>\r\n              <p>Loading article ...</p>\r\n            </Informer>\r\n            )\r\n          : state === 'failed'\r\n            ? (\r\n              <Informer>\r\n                <p>Error occurred!</p>\r\n              </Informer>\r\n              )\r\n            : (\r\n                posts\r\n                  .slice(0, 2)\r\n                  .map(({ uid, data, url }) => (\r\n                    <PostPreview\r\n                      key={uid}\r\n                      url={`${url}/${uid}`}\r\n                      title={prismicH.asText(data.title)}\r\n                      introduction={prismicH.asText(data.introduction)}\r\n                    />\r\n                  ))\r\n              )}\r\n      <StyledLink\r\n        linkTo={'/pages/1'}\r\n        style={{ width: '100%', margin: '0 auto', backgroundColor: '#93B7BE' }}\r\n      >\r\n        BROWSE POSTS\r\n      </StyledLink>\r\n      <Footer\r\n        copyright={'Blog powered by: Prismic, made by Mateusz Suplewski'}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledPagination = styled.nav`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  padding: 1.25rem;\r\n  margin: 0 auto;\r\n  max-width: 1000px;\r\n`\r\n\r\nconst StyledPagination = styled(DefaultStyledPagination)(({ style }) => style)\r\n\r\nconst PageNumberList = styled.ul`\r\n  list-style: none;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1.25rem;\r\n  box-sizing: border-box;\r\n  padding-left: 0;\r\n`\r\n\r\nconst PageNumber = styled.li`\r\n  display: inline-block;\r\n  font-size: 1.2rem;\r\n`\r\n\r\nexport { StyledPagination, PageNumberList, PageNumber }\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink, useParams } from 'react-router-dom'\r\nimport { StyledPagination, PageNumberList, PageNumber } from './Pagination.styled'\r\n\r\nconst Pagination = (props) => {\r\n  const { children, limit = 1, path } = props\r\n  const { page, category, year, month } = useParams()\r\n  const length = children.length\r\n  const begin = limit * (page - 1)\r\n  const end = page * limit\r\n  const pages = Math.ceil(length / limit) >= page ? Math.ceil(length / limit) : 0\r\n\r\n  let additionalPath = ''\r\n  if (category) additionalPath += `/categories/${category}`\r\n  if (year && month) additionalPath += `/published/${year}/${month}`\r\n\r\n  const defaultStyle = {\r\n    color: 'black',\r\n    textDecoration: 'none'\r\n  }\r\n\r\n  const activeStyle = {\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    textDecoration: 'none'\r\n  }\r\n\r\n  const links = new Array(pages).fill(0).map((item, index) => (\r\n    <PageNumber key={index}>\r\n      <NavLink\r\n        style={({ isActive }) => (isActive ? activeStyle : defaultStyle)}\r\n        to={`${path}/${index + 1}${additionalPath}`}\r\n      >\r\n        {index + 1}\r\n      </NavLink>\r\n    </PageNumber>\r\n  ))\r\n\r\n  return (\r\n    <>\r\n      {children.slice(begin, end)}\r\n      <StyledPagination>\r\n        <PageNumberList>{links}</PageNumberList>\r\n      </StyledPagination>\r\n    </>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  children: PropTypes.node,\r\n  limit: PropTypes.number,\r\n  path: PropTypes.string\r\n}\r\n\r\nexport default Pagination\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledPostsFilterForm = styled.div`\r\n  box-sizing: border-box;\r\n  padding: 1.25rem;\r\n  width: 100%;\r\n\r\n  & input,\r\n  select {\r\n    padding: 0.5rem 0.75rem;\r\n    border: 1px solid rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  & form {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    & form {\r\n      margin: 0 auto;\r\n      flex-direction: column;\r\n    }\r\n\r\n    & input,\r\n    select {\r\n      margin: 1.25rem 0;\r\n      width: 260px;\r\n      box-sizing: border-box;\r\n    }\r\n  }\r\n  @media (min-width: 768px) {\r\n    & form {\r\n      justify-content: center;\r\n    }\r\n\r\n    & input,\r\n    select {\r\n      margin: 0.75rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledPostsFilterForm = styled(DefaultStyledPostsFilterForm)(\r\n  ({ style }) => style\r\n)\r\n\r\nexport { StyledPostsFilterForm }\r\n","import PostsFilterForm from './PostsFilterForm'\r\n\r\nexport default PostsFilterForm\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledPostsFilterForm } from './PostsFilterForm.styled'\r\nimport { useAllPrismicDocumentsByType } from '@prismicio/react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport Button from '../Button'\r\n\r\nconst PostsFilter = ({ style }) => {\r\n  const [categories] = useAllPrismicDocumentsByType('category')\r\n  const { category, year, month } = useParams()\r\n  const defaultPath = '/pages/1'\r\n  const [postCategory, setPostCategory] = useState(category || '')\r\n  const [publishDate, setPublishDate] = useState(year && month ? `${year}-${month}` : '')\r\n\r\n  const navigate = useNavigate()\r\n  const convertedDate = publishDate.split('-').join('/')\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (postCategory === category && `${year}-${month}` === publishDate) return\r\n    if (!postCategory && !publishDate) navigate(defaultPath)\r\n    if (publishDate && postCategory) {\r\n      navigate(`${defaultPath}/categories/${postCategory}/published/${convertedDate}`.toLowerCase())\r\n      return\r\n    }\r\n    if (postCategory) navigate(`${defaultPath}/categories/${postCategory}`.toLowerCase())\r\n    if (publishDate) navigate(`${defaultPath}/published/${convertedDate}`.toLowerCase())\r\n  }\r\n\r\n  return (\r\n    <StyledPostsFilterForm style={style}>\r\n      <form onSubmit={handleSubmit}>\r\n        <select\r\n          value={postCategory}\r\n          onChange={(e) => setPostCategory(e.target.value)}\r\n        >\r\n          <option value={''}>All</option>\r\n          {categories &&\r\n            categories.map(({ uid, data }) => (\r\n              <option\r\n                key={uid}\r\n                value={data.category_name}\r\n              >\r\n                {data.category_name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <input\r\n          type={'month'}\r\n          onChange={(e) => setPublishDate(e.target.value)}\r\n          value={publishDate}\r\n        />\r\n        <Button type={'submit'}>FILTER</Button>\r\n      </form>\r\n    </StyledPostsFilterForm>\r\n  )\r\n}\r\n\r\nPostsFilter.propTypes = {\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default PostsFilter\r\n","import React from 'react'\r\nimport Header from '../components/Header'\r\nimport PostPreview from '../components/PostPreview'\r\nimport Footer from '../components/Footer'\r\nimport { useAllPrismicDocumentsByType } from '@prismicio/react'\r\nimport * as prismicH from '@prismicio/helpers'\r\nimport Pagination from '../components/Pagination/Pagination'\r\nimport { useParams } from 'react-router-dom'\r\nimport PostsFilterForm from '../components/PostsFilterForm'\r\nimport Informer from '../components/Informer'\r\nimport { sortPosts } from '../helper'\r\n\r\nexport const FilteredPosts = () => {\r\n  const [posts, { state }] = useAllPrismicDocumentsByType('post', {\r\n    fetchLinks: ['category.category_name']\r\n  })\r\n  const { category, year, month } = useParams()\r\n  const filteredPosts = posts && sortPosts(posts, category, year, month)\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        title={'Cosmoneus - Blog'}\r\n        description={'Blog made with passion to everything that surrounds us. Find life articles from various fields like.: Technologies, News, Travel ect.!'}\r\n        avatar={'https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80'}\r\n      />\r\n      <PostsFilterForm />\r\n      {state === 'idle'\r\n        ? (\r\n          <Informer>\r\n            <p>Server is preparing article for you</p>\r\n          </Informer>\r\n          )\r\n        : state === 'loading'\r\n          ? (\r\n            <Informer>\r\n              <p>Loading article ...</p>\r\n            </Informer>\r\n            )\r\n          : state === 'failed'\r\n            ? (\r\n              <Informer>\r\n                <p>Error occurred!</p>\r\n              </Informer>\r\n              )\r\n            : (\r\n              <Pagination\r\n                limit={6}\r\n                path={'/pages'}\r\n              >\r\n                {filteredPosts.map(({ uid, url, data }) => {\r\n                  return (\r\n                    <PostPreview\r\n                      key={uid}\r\n                      url={`${url}/${uid}`}\r\n                      title={prismicH.asText(data.title)}\r\n                      introduction={prismicH.asText(data.introduction)}\r\n                    />\r\n                  )\r\n                })}\r\n              </Pagination>\r\n              )}\r\n      <Footer\r\n        copyright={'Blog powered with Prismic || Made by Mateusz Suplewski'}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilteredPosts\r\n","const sortByDate = (posts, year, month) =>\r\n  posts.filter((post) => {\r\n    const publishDate = post.first_publication_date\r\n      .split('-')\r\n      .slice(0, 2)\r\n      .join('/')\r\n    const filterDate = `${year}/${month}`\r\n    return filterDate === publishDate\r\n  })\r\n\r\nconst sortByCategory = (posts, category) => {\r\n  return posts.filter((post) => {\r\n    return post.data.categories.find(\r\n      ({ relatedcategory }) =>\r\n        relatedcategory.data.category_name.toLowerCase() === category\r\n    )\r\n  })\r\n}\r\n\r\nconst sortPosts = (posts, category, year, month) => {\r\n  let filteredData = posts\r\n  if (category) filteredData = sortByCategory(filteredData, category)\r\n  if (year && month) filteredData = sortByDate(filteredData, year, month)\r\n  return filteredData\r\n}\r\n\r\nexport { sortByDate, sortByCategory, sortPosts }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Informer from '../components/Informer'\r\n\r\nconst Page404 = () => {\r\n  const navigate = useNavigate()\r\n  const [time, setTime] = useState(5)\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setTime((actualTime) => actualTime - 1)\r\n    }, 1000)\r\n    return () => clearInterval(intervalId)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (time === 0) navigate('/')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [time])\r\n\r\n  return (\r\n    <Informer>\r\n      <p>{'Ooops! Something went wrong :/ .... Looks like page your are looking for doesn\\t exist!'}</p>\r\n      <p>{`You will be automatically redirected to home page in ${time} s`}</p>\r\n    </Informer>\r\n  )\r\n}\r\n\r\nexport default Page404\r\n","import PageRoutes from './PageRoutes'\r\n\r\nexport default PageRoutes\r\n","import React from 'react'\r\n\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport Article from '../../views/Article'\r\nimport Home from '../../views/Home'\r\nimport FilteredPosts from '../../views/FilteredPosts'\r\nimport Page404 from '../../views/Page404'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PageRoutes = ({ location }) => {\r\n  return (\r\n    <Routes location={location}>\r\n      <Route\r\n        path={'/'}\r\n        element={<Home />}\r\n      />\r\n      <Route\r\n        path={'/articles/:article'}\r\n        element={<Article />}\r\n      />\r\n      <Route\r\n        path={'/pages/:page'}\r\n        element={<FilteredPosts />}\r\n      >\r\n        <Route\r\n          path={'categories/:category'}\r\n          element={<FilteredPosts />}\r\n        />\r\n        <Route\r\n          path={'published/:year/:month'}\r\n          element={<FilteredPosts />}\r\n        />\r\n        <Route\r\n          path={'categories/:category/published/:year/:month'}\r\n          element={<FilteredPosts />}\r\n        />\r\n      </Route>\r\n      <Route\r\n        path={'*'}\r\n        element={<Page404 />}\r\n      />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nPageRoutes.propTypes = {\r\n  location: PropTypes.object\r\n}\r\nexport default PageRoutes\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultStyledAnimatedRoutes = styled.div`\r\n  &.page-animation {\r\n    &-enter {\r\n      transition: ${props => props.time || 1}ms opacity;\r\n      opacity: 0;\r\n    }\r\n    &-enter-active {\r\n      opacity: 1;\r\n    }\r\n    &-exit {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledAnimatedRoutes = styled(DefaultStyledAnimatedRoutes)(({ style }) => style)\r\n\r\nexport { StyledAnimatedRoutes }\r\n","import AnimatedRoutes from './AnimatedRoutes'\r\n\r\nexport default AnimatedRoutes\r\n","import React from 'react'\r\nimport PageRoutes from '../PageRoutes'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport { StyledAnimatedRoutes } from './AnimatedRoutes.styled'\r\n\r\nconst AnimatedRoutes = () => {\r\n  const location = useLocation()\r\n  const animationTime = 1000\r\n  return (\r\n    <TransitionGroup>\r\n      <CSSTransition\r\n        classNames={'page-animation'}\r\n        timeout={animationTime}\r\n        key={location.key}\r\n      >\r\n        <StyledAnimatedRoutes time={animationTime}>\r\n          <PageRoutes location={location}/>\r\n        </StyledAnimatedRoutes>\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\nexport default AnimatedRoutes\r\n","import React from 'react'\r\n\r\nimport { ThemeProvider } from 'styled-components'\r\nimport themeSettings from './theme'\r\nimport AnimatedRoutes from './components/AnimatedRoutes'\r\nexport const App = () => {\r\n  return (\r\n    <ThemeProvider theme={themeSettings}>\r\n      <AnimatedRoutes/>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import * as prismic from '@prismicio/client'\r\n\r\nexport const repositoryName = 'blog-by-mateusz-suplewski'\r\n\r\nexport const client = prismic.createClient(repositoryName, {\r\n  accessToken: '',\r\n\r\n  routes: [\r\n    {\r\n      type: 'post',\r\n      path: '/articles'\r\n    }\r\n  ]\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { PrismicProvider } from '@prismicio/react'\r\nimport { client } from './prismic'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <PrismicProvider client={client}>\r\n        <App />\r\n      </PrismicProvider>\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}