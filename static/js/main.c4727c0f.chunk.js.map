{"version":3,"sources":["theme.js","components/Post/Post.styled.js","components/CategoryList/CategoryList.styled.js","components/CategoryList/index.js","components/CategoryList/CategoryList.js","components/Post/index.js","components/Post/Post.js","components/Informer/Informer.styled.js","components/Informer/index.js","components/Informer/Informer.js","components/Button/Button.styled.js","components/Button/index.js","components/Button/Button.js","views/Article.js","components/Header/Header.styled.js","components/Header/index.js","components/Header/Header.js","components/PostPreview/PostPreview.styled.js","components/Link/Link.styled.js","components/Link/index.js","components/Link/Link.js","components/PostPreview/index.js","components/PostPreview/PostPreview.js","components/Footer/Footer.styled.js","components/Footer/index.js","components/Footer/Footer.js","views/Home.js","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.js","components/PostsFilterForm/PostsFilterForm.styled.js","components/PostsFilterForm/index.js","components/PostsFilterForm/PostsFilterForm.js","views/FilteredPosts.js","helper.js","views/Page404.js","components/PageRoutes/index.js","components/PageRoutes/PageRoutes.js","components/AnimatedRoutes/AnimatedRoutes.styled.js","components/AnimatedRoutes/index.js","components/AnimatedRoutes/AnimatedRoutes.js","App.js","reportWebVitals.js","prismic.js","index.js"],"names":["themeSettings","primaryHeadersColor","secondaryHeadersColor","primaryDecorativeColor","secondaryDecorativeColor","primaryBackgroundColor","secondaryBackgroundColor","fontToRead","primaryPostFont","secondaryPostFont","DefaultStyledPost","styled","div","theme","StyledPost","style","DefaultStyledCategoryList","ul","StyledCategoryList","Category","li","CategoryList","categories","map","relatedcategory","data","category_name","id","Post","postData","imgUrl","field","title","introduction","content","src","alt","image","DefaultStyledInformer","StyledInformer","Informer","children","DefaultStyledButton","button","StyledButton","Button","onClick","type","Article","article","useParams","usePrismicDocumentByUID","fetchLinks","state","navigate","useNavigate","prismicH","DefaultStyledHeader","header","StyledHeader","Avatar","props","url","Title","h1","Description","p","Header","description","avatar","DefaultStyledPostPreview","StyledPostPreview","h3","fprimaryPostFont","DefaultStyledLink","Link","StyledLink","linkTo","to","PostPreview","DefaultStyledFooter","footer","StyledFooter","Copyright","Footer","copyright","Home","useAllPrismicDocumentsByType","posts","slice","uid","width","margin","backgroundColor","DefaultStyledPagination","nav","StyledPagination","PageNumberList","PageNumber","Pagination","limit","path","page","category","year","month","length","begin","end","pages","Math","ceil","additionalPath","defaultStyle","color","textDecoration","activeStyle","fontWeight","links","Array","fill","item","index","isActive","DefaultStyledPostsFilterForm","StyledPostsFilterForm","PostsFilterForm","defaultPath","useState","postCategory","setPostCategory","publishDate","setPublishDate","convertedDate","split","join","onSubmit","e","preventDefault","toLowerCase","value","onChange","target","FilteredPosts","filteredPosts","filteredData","filter","post","find","sortByCategory","first_publication_date","sortByDate","sortPosts","Page404","time","setTime","useEffect","intervalId","setInterval","actualTime","clearInterval","PageRoutes","location","element","DefaultStyledAnimatedRoutes","StyledAnimatedRoutes","AnimatedRoutes","useLocation","TransitionGroup","CSSTransition","classNames","timeout","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","prismic","accessToken","routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4727c0f.chunk.js","sourcesContent":["const themeSettings = {\n  primaryHeadersColor: '#454545',\n  secondaryHeadersColor: 'wheat',\n  primaryDecorativeColor: '#93B7BE',\n  secondaryDecorativeColor: '#785964',\n  primaryBackgroundColor: '#F1FFFA',\n  secondaryBackgroundColor: 'rgba(0,0,0,0.1)',\n  fontToRead: '\\'Merriweather\\', serif',\n  primaryPostFont: '\\'Lato\\', sans-serif',\n  secondaryPostFont: '\\'PT Serif\\', serif'\n}\n\nexport default themeSettings\n","import styled from 'styled-components'\nconst DefaultStyledPost = styled.div`\n  --primary-h: ${({ theme }) => theme.primaryHeadersColor};\n  --secondary-h: ${({ theme }) => theme.secondaryHeadersColor};\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\n  --secondary-dec: ${({ theme }) => theme.secondaryDecorativeColor};\n  --secondary-bg: ${({ theme }) => theme.secondaryBackgroundColor};\n  --font-read: ${({ theme }) => theme.fontToRead};\n\n  box-sizing: border-box;\n  background-color: var(--secondary-bg);\n  max-width: 1000px;\n  margin: 0 auto;\n\n  & h2 {\n    margin: 0;\n    text-align: center;\n    padding: 2.5rem 0;\n    background-color: var(--secondary-dec);\n    color: var(--secondary-h);\n    font-family: var(--font-read);\n    font-weight: 700;\n  }\n\n  & h4 {\n    color: var(--primary-h);\n    font-family: var(--font-read);\n    padding: 0 1rem;\n  }\n\n  & p {\n    font-family: var(--font-read);\n    padding: 0 1rem;\n    font-weight: 300;\n  }\n\n  & img {\n    object-fit: cover;\n    margin: 1.25rem auto;\n    display: block;\n    width: auto;\n    max-width: 100%;\n    height: 100%;\n    max-height: 600px;\n  }\n`\n\nconst StyledPost = styled(DefaultStyledPost)(({ style }) => style)\n\nexport { StyledPost }\n","import styled from 'styled-components'\n\nconst DefaultStyledCategoryList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n`\n\nconst StyledCategoryList = styled(DefaultStyledCategoryList)(\n  ({ style }) => style\n)\n\nconst Category = styled.li`\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\n\n  padding: 0.25rem 1.25rem;\n  font-weight: bold;\n  background-color: var(--primary-dec);\n`\n\nexport { StyledCategoryList, Category }\n","import CategoryList from './CategoryList'\n\nexport default CategoryList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledCategoryList, Category } from './CategoryList.styled'\n\nconst CategoryList = ({ style, categories }) => {\n  return (\n    <StyledCategoryList style={style}>\n      {categories.map(({ relatedcategory }) => (\n        <Category key={relatedcategory.id}>\n          {relatedcategory.data.category_name}\n        </Category>\n      ))}\n    </StyledCategoryList>\n  )\n}\n\nCategoryList.propTypes = {\n  style: PropTypes.object,\n  categories: PropTypes.array\n}\n\nexport default CategoryList\n","import Post from './Post'\n\nexport default Post\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledPost } from './Post.styled'\nimport { PrismicRichText } from '@prismicio/react'\nimport CategoryList from '../CategoryList'\n\nconst Post = ({ style, postData, imgUrl }) => {\n  return (\n    <StyledPost style={style}>\n      <>\n        <PrismicRichText field={postData.data.title} />\n        <PrismicRichText field={postData.data.introduction} />\n        <PrismicRichText field={postData.data.content} />\n        <img\n          src={imgUrl}\n          alt={postData.data.image.alt}\n        />\n        <CategoryList categories={postData.data.categories} />\n      </>\n    </StyledPost>\n  )\n}\n\nPost.propTypes = {\n  style: PropTypes.object,\n  postData: PropTypes.object,\n  imgUrl: PropTypes.string\n}\n\nexport default Post\n","import styled from 'styled-components'\n\nconst DefaultStyledInformer = styled.div`\n  max-width: 1000px;\n  width: 100%;\n  margin: 2.5rem auto;\n  padding: 20vh 0.75rem 40vh 0.75rem;\n  box-sizing: border-box;\n  & p {\n    font-size: 1.5rem;\n    text-align: center;\n  }\n`\n\nconst StyledInformer = styled(DefaultStyledInformer)(({ style }) => style)\n\nexport { StyledInformer }\n","import Informer from './Informer'\n\nexport default Informer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledInformer } from './Informer.styled'\n\nconst Informer = ({ style, children }) => {\n  return <StyledInformer styled={style}>{children}</StyledInformer>\n}\n\nInformer.propTypes = {\n  style: PropTypes.object,\n  children: PropTypes.node\n}\n\nexport default Informer\n","import styled from 'styled-components'\n\nconst DefaultStyledButton = styled.button`\n  --secondary-dec: ${({ theme }) => theme.secondaryDecorativeColor};\n\n  width: 200px;\n  height: 35px;\n  background-color: var(--secondary-dec);\n  color: white;\n  font-weight: bold;\n  letter-spacing: 1px;\n`\n\nconst StyledButton = styled(DefaultStyledButton)(({ style }) => style)\n\nexport default StyledButton\n","import Button from './Button'\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport StyledButton from './Button.styled'\n\nconst Button = ({ onClick, style, type = 'button', children }) => {\n  return (\n    <StyledButton\n      style={style}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </StyledButton>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n  onClick: PropTypes.func,\n  type: PropTypes.string\n}\n\nexport default Button\n","import React from 'react'\nimport * as prismicH from '@prismicio/helpers'\nimport { usePrismicDocumentByUID } from '@prismicio/react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport Post from '../components/Post'\nimport Informer from '../components/Informer'\nimport Button from '../components/Button'\n\nconst Article = () => {\n  const { article } = useParams()\n  const [postData, { state }] = usePrismicDocumentByUID('post', article, {\n    fetchLinks: ['category.category_name']\n  })\n  const navigate = useNavigate()\n  const src = postData && prismicH.asImageSrc(postData.data.image)\n\n  const ChangeToPreviousPage = () => {\n    navigate(-1)\n  }\n\n  return (\n    <div>\n      {state === 'idle'\n        ? (\n          <Informer>\n            <p>Server is preparing article for you</p>\n          </Informer>\n          )\n        : state === 'loading'\n          ? (\n            <Informer>\n              <p>Loading article ...</p>\n            </Informer>\n            )\n          : state === 'failed'\n            ? (\n              <Informer>\n                <p>Error occurred!</p>\n              </Informer>\n              )\n            : (\n              <>\n                <Button onClick={ChangeToPreviousPage}>RETURN TO ARTICLES</Button>\n                <Post\n                  imgUrl={src}\n                  postData={postData}\n                />\n              </>\n              )}\n    </div>\n  )\n}\n\nexport default Article\n","import styled from 'styled-components'\n\nconst DefaultStyledHeader = styled.header`\n  --primary-h: ${({ theme }) => theme.primaryHeadersColor};\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\n  --secondary-dec: ${({ theme }) => theme.secondaryDecorativeColor};\n  --primary-bg: ${({ theme }) => theme.primaryBackgroundColor};\n\n  display: grid;\n  background: var(--primary-bg); // primary bg color: ;\n  box-sizing: border-box;\n  width: 100%;\n\n  @media (max-width: 767px) {\n    grid-template-areas:\n      'avatar'\n      'title'\n      'description';\n    padding: 1.2rem 1rem;\n    justify-items: center;\n    grid-template-columns: 1fr;\n    gap: 0 2.5rem;\n  }\n\n  @media (min-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n      'avatar title'\n      'avatar  description';\n    padding: 1.25rem 10vw;\n  }\n`\n\nconst StyledHeader = styled(DefaultStyledHeader)(({ style }) => style)\n\nconst Avatar = styled.div`\n  grid-area: avatar;\n  height: 300px;\n  width: 300px;\n  border-radius: 50%;\n  background: ${props => `url(${props.url})`};\n  background-position: center;\n  background-size: cover;\n  @media (max-width: 767px) {\n  }\n\n  @media (min-width: 768px) {\n    margin-right: 2rem;\n    justify-self: end;\n  }\n`\n\nconst Title = styled.h1`\n  color: var(--primary-h);\n  grid-area: title;\n  width: 100%;\n  max-width: 500px;\n\n  @media (max-width: 767px) {\n    text-align: center;\n  }\n\n  @media (min-width: 768px) {\n    align-self: center;\n  }\n`\n\nconst Description = styled.p`\n  grid-area: description;\n  width: 100%;\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n  font-size: 1.2rem;\n  line-height: 2rem;\n  max-width: 500px;\n  color: var(--primary-dec);\n\n  @media (max-width: 767px) {\n    border-bottom: 0.25rem solid var(--secondary-dec); // decorative effects color not font color\n    padding-bottom: 10px;\n  }\n  @media (min-width: 768px) {\n    border-bottom: 0.125rem solid var(--secondary-dec); // decorative effects color not font color\n    justify-self: start;\n  }\n`\n\nexport { StyledHeader, Avatar, Title, Description }\n","import Header from './Header'\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledHeader, Avatar, Title, Description } from './Header.styled'\n\nconst Header = ({ style, title, description, avatar }) => {\n  return (\n    <StyledHeader style={style}>\n      <Avatar url={avatar}/>\n      <Title>{title}</Title>\n      <Description>\n        {description}\n      </Description>\n    </StyledHeader>\n  )\n}\n\nHeader.propTypes = {\n  style: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  avatar: PropTypes.string\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nconst DefaultStyledPostPreview = styled.article`\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 1000px;\n\n  @media (max-width: 767px) {\n    padding: 1.2rem 1rem;\n  }\n  @media (min-width: 768px) {\n    margin: 0 auto;\n    padding: 1.25rem;\n  }\n`\n\nconst StyledPostPreview = styled(DefaultStyledPostPreview)(\n  ({ style }) => style\n)\n\nconst Title = styled.h3`\n  --primary-h: ${({ theme }) => theme.primaryHeadersColor};\n  --font-primary: ${({ theme }) => theme.fprimaryPostFont};\n  color: var(--primary-h);\n  font-size: 1.8rem;\n  width: 100%;\n  font-family: var(--font-primary);\n  margin-bottom: 0;\n\n  @media (max-width: 767px) {\n    text-align: center;\n  }\n  @media (min-width: 768px) {\n  }\n`\n\nconst Description = styled.p`\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\n  --font-secondary: ${({ theme }) => theme.secondaryPostFont};\n  width: 100%;\n  color: var(--primary-dec);\n  font-family: var(--font-secondary);\n  @media (max-width: 767px) {\n    font-size: 1.2rem;\n  }\n  @media (min-width: 768px) {\n    margin: 10px auto;\n    font-size: 1.4rem;\n  }\n`\n\nexport { StyledPostPreview, Title, Description }\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst DefaultStyledLink = styled(Link)`\n  --primary-dec: ${({ theme }) => theme.primaryDecorativeColor};\n  --primary-bg: ${({ theme }) => theme.primaryBackgroundColor};\n\n  text-decoration: none;\n  max-width: 1000px;\n  color: black;\n  font-weight: bold;\n  padding: 0.5rem 0.75rem;\n  border: 0.25rem solid var(--primary-dec);\n  background-color: var(--primary-bg);\n  letter-spacing: 1px;\n  display: block;\n  text-align: center;\n  box-sizing: border-box;\n\n  @media (max-width: 767px) {\n    margin: 0 auto;\n  }\n  @media (min-width: 768px) {\n  }\n`\n\nconst StyledLink = styled(DefaultStyledLink)(({ style }) => style)\n\nexport { StyledLink }\n","import Link from './Link'\n\nexport default Link\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledLink } from './Link.styled'\n\nconst Link = ({ style, linkTo, children }) => {\n  return (\n    <StyledLink\n      style={style}\n      to={linkTo}\n    >\n      {children}\n    </StyledLink>\n  )\n}\n\nLink.propTypes = {\n  style: PropTypes.object,\n  linkTo: PropTypes.string,\n  children: PropTypes.node\n}\n\nexport default Link\n","import PostPreview from './PostPreview'\n\nexport default PostPreview\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledPostPreview, Title, Description } from './PostPreview.styled'\nimport StyledLink from '../Link'\n\nconst PostPreview = ({ style, title, introduction, url }) => {\n  return (\n    <StyledPostPreview style={style}>\n      <Title>{title}</Title>\n      <Description>{introduction}</Description>\n      <StyledLink linkTo={url}>Preview more</StyledLink>\n    </StyledPostPreview>\n  )\n}\n\nPostPreview.propTypes = {\n  style: PropTypes.object,\n  title: PropTypes.string,\n  introduction: PropTypes.string,\n  url: PropTypes.string\n}\n\nexport default PostPreview\n","import styled from 'styled-components'\n\nconst DefaultStyledFooter = styled.footer`\n  --primary-bg: ${({ theme }) => theme.primaryBackgroundColor};\n\n  box-sizing: border-box;\n  width: 100%;\n  padding: 1.25rem 10vw;\n  background: var(--primary-bg);\n`\n\nconst StyledFooter = styled(DefaultStyledFooter)(({ style }) => style)\n\nconst Copyright = styled.p`\n  text-align: center;\n`\n\nexport { StyledFooter, Copyright }\n","import Footer from './Footer'\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledFooter, Copyright } from './Footer.styled'\n\nconst Footer = ({ style, children, copyright }) => {\n  return (\n    <StyledFooter style={style}>\n      {children}\n      <Copyright>{copyright}</Copyright>\n    </StyledFooter>\n  )\n}\nFooter.propTypes = {\n  style: PropTypes.object,\n  children: PropTypes.node,\n  copyright: PropTypes.string\n}\n\nexport default Footer\n","import React from 'react'\nimport Header from '../components/Header'\nimport PostPreview from '../components/PostPreview'\nimport Footer from '../components/Footer'\nimport { useAllPrismicDocumentsByType } from '@prismicio/react'\nimport * as prismicH from '@prismicio/helpers'\nimport StyledLink from '../components/Link'\nimport Informer from '../components/Informer'\n\nexport const Home = () => {\n  const [posts, { state }] = useAllPrismicDocumentsByType('post', {\n    fetchLinks: ['category.category_name']\n  })\n\n  return (\n    <div>\n      <Header\n        title={'Cosmoneus - Blog'}\n        description={'Blog made with passion to everything that surrounds us. Find life articles from various fields like.: Technologies, News, Travel ect.!'}\n        avatar={'https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80'}\n      />\n      {state === 'idle'\n        ? (\n          <Informer>\n            <p>Server is preparing article for you</p>\n          </Informer>\n          )\n        : state === 'loading'\n          ? (\n            <Informer>\n              <p>Loading article ...</p>\n            </Informer>\n            )\n          : state === 'failed'\n            ? (\n              <Informer>\n                <p>Error occurred!</p>\n              </Informer>\n              )\n            : (\n                posts\n                  .slice(0, 2)\n                  .map(({ uid, data, url }) => (\n                    <PostPreview\n                      key={uid}\n                      url={`${url}/${uid}`}\n                      title={prismicH.asText(data.title)}\n                      introduction={prismicH.asText(data.introduction)}\n                    />\n                  ))\n              )}\n      <StyledLink\n        linkTo={'/pages/1'}\n        style={{ width: '100%', margin: '0 auto', backgroundColor: '#93B7BE' }}\n      >\n        BROWSE POSTS\n      </StyledLink>\n      <Footer\n        copyright={'Blog powered by: Prismic, made by Mateusz Suplewski'}\n      />\n    </div>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\n\nconst DefaultStyledPagination = styled.nav`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 1.25rem;\n  margin: 0 auto;\n  max-width: 1000px;\n`\n\nconst StyledPagination = styled(DefaultStyledPagination)(({ style }) => style)\n\nconst PageNumberList = styled.ul`\n  list-style: none;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  gap: 1.25rem;\n  box-sizing: border-box;\n  padding-left: 0;\n`\n\nconst PageNumber = styled.li`\n  display: inline-block;\n  font-size: 1.2rem;\n`\n\nexport { StyledPagination, PageNumberList, PageNumber }\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { NavLink, useParams } from 'react-router-dom'\nimport { StyledPagination, PageNumberList, PageNumber } from './Pagination.styled'\n\nconst Pagination = (props) => {\n  const { children, limit = 1, path } = props\n  const { page, category, year, month } = useParams()\n  const length = children.length\n  const begin = limit * (page - 1)\n  const end = page * limit\n  const pages = Math.ceil(length / limit) >= page ? Math.ceil(length / limit) : 0\n\n  let additionalPath = ''\n  if (category) additionalPath += `/categories/${category}`\n  if (year && month) additionalPath += `/published/${year}/${month}`\n\n  const defaultStyle = {\n    color: 'black',\n    textDecoration: 'none'\n  }\n\n  const activeStyle = {\n    fontWeight: 'bold',\n    color: 'black',\n    textDecoration: 'none'\n  }\n\n  const links = new Array(pages).fill(0).map((item, index) => (\n    <PageNumber key={index}>\n      <NavLink\n        style={({ isActive }) => (isActive ? activeStyle : defaultStyle)}\n        to={`${path}/${index + 1}${additionalPath}`}\n      >\n        {index + 1}\n      </NavLink>\n    </PageNumber>\n  ))\n\n  return (\n    <>\n      {children.slice(begin, end)}\n      <StyledPagination>\n        <PageNumberList>{links}</PageNumberList>\n      </StyledPagination>\n    </>\n  )\n}\n\nPagination.propTypes = {\n  children: PropTypes.node,\n  limit: PropTypes.number,\n  path: PropTypes.string\n}\n\nexport default Pagination\n","import styled from 'styled-components'\n\nconst DefaultStyledPostsFilterForm = styled.div`\n  box-sizing: border-box;\n  padding: 1.25rem;\n  width: 100%;\n\n  & input,\n  select {\n    padding: 0.5rem 0.75rem;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n  }\n\n  & form {\n    width: 100%;\n    display: flex;\n    align-items: center;\n  }\n\n  @media (max-width: 767px) {\n    & form {\n      margin: 0 auto;\n      flex-direction: column;\n    }\n\n    & input,\n    select {\n      margin: 1.25rem 0;\n      width: 260px;\n      box-sizing: border-box;\n    }\n  }\n  @media (min-width: 768px) {\n    & form {\n      justify-content: center;\n    }\n\n    & input,\n    select {\n      margin: 0.75rem;\n    }\n  }\n`\n\nconst StyledPostsFilterForm = styled(DefaultStyledPostsFilterForm)(\n  ({ style }) => style\n)\n\nexport { StyledPostsFilterForm }\n","import PostsFilterForm from './PostsFilterForm'\n\nexport default PostsFilterForm\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledPostsFilterForm } from './PostsFilterForm.styled'\nimport { useAllPrismicDocumentsByType } from '@prismicio/react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport Button from '../Button'\n\nconst PostsFilter = ({ style }) => {\n  const [categories] = useAllPrismicDocumentsByType('category')\n  const { category, year, month } = useParams()\n  const defaultPath = '/pages/1'\n  const [postCategory, setPostCategory] = useState(category || '')\n  const [publishDate, setPublishDate] = useState(year && month ? `${year}-${month}` : '')\n\n  const navigate = useNavigate()\n  const convertedDate = publishDate.split('-').join('/')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (postCategory === category && `${year}-${month}` === publishDate) return\n    if (!postCategory && !publishDate) navigate(defaultPath)\n    if (publishDate && postCategory) {\n      navigate(`${defaultPath}/categories/${postCategory}/published/${convertedDate}`.toLowerCase())\n      return\n    }\n    if (postCategory) navigate(`${defaultPath}/categories/${postCategory}`.toLowerCase())\n    if (publishDate) navigate(`${defaultPath}/published/${convertedDate}`.toLowerCase())\n  }\n\n  return (\n    <StyledPostsFilterForm style={style}>\n      <form onSubmit={handleSubmit}>\n        <select\n          value={postCategory}\n          onChange={(e) => setPostCategory(e.target.value)}\n        >\n          <option value={''}>All</option>\n          {categories &&\n            categories.map(({ uid, data }) => (\n              <option\n                key={uid}\n                value={data.category_name}\n              >\n                {data.category_name}\n              </option>\n            ))}\n        </select>\n        <input\n          type={'month'}\n          onChange={(e) => setPublishDate(e.target.value)}\n          value={publishDate}\n        />\n        <Button type={'submit'}>FILTER</Button>\n      </form>\n    </StyledPostsFilterForm>\n  )\n}\n\nPostsFilter.propTypes = {\n  style: PropTypes.object\n}\n\nexport default PostsFilter\n","import React from 'react'\nimport Header from '../components/Header'\nimport PostPreview from '../components/PostPreview'\nimport Footer from '../components/Footer'\nimport { useAllPrismicDocumentsByType } from '@prismicio/react'\nimport * as prismicH from '@prismicio/helpers'\nimport Pagination from '../components/Pagination/Pagination'\nimport { useParams } from 'react-router-dom'\nimport PostsFilterForm from '../components/PostsFilterForm'\nimport Informer from '../components/Informer'\nimport { sortPosts } from '../helper'\n\nexport const FilteredPosts = () => {\n  const [posts, { state }] = useAllPrismicDocumentsByType('post', {\n    fetchLinks: ['category.category_name']\n  })\n  const { category, year, month } = useParams()\n  const filteredPosts = posts && sortPosts(posts, category, year, month)\n\n  return (\n    <div>\n      <Header\n        title={'Cosmoneus - Blog'}\n        description={'Blog made with passion to everything that surrounds us. Find life articles from various fields like.: Technologies, News, Travel ect.!'}\n        avatar={'https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80'}\n      />\n      <PostsFilterForm />\n      {state === 'idle'\n        ? (\n          <Informer>\n            <p>Server is preparing article for you</p>\n          </Informer>\n          )\n        : state === 'loading'\n          ? (\n            <Informer>\n              <p>Loading article ...</p>\n            </Informer>\n            )\n          : state === 'failed'\n            ? (\n              <Informer>\n                <p>Error occurred!</p>\n              </Informer>\n              )\n            : (\n              <Pagination\n                limit={6}\n                path={'/pages'}\n              >\n                {filteredPosts.map(({ uid, url, data }) => {\n                  return (\n                    <PostPreview\n                      key={uid}\n                      url={`${url}/${uid}`}\n                      title={prismicH.asText(data.title)}\n                      introduction={prismicH.asText(data.introduction)}\n                    />\n                  )\n                })}\n              </Pagination>\n              )}\n      <Footer\n        copyright={'Blog powered with Prismic || Made by Mateusz Suplewski'}\n      />\n    </div>\n  )\n}\n\nexport default FilteredPosts\n","const sortByDate = (posts, year, month) =>\n  posts.filter((post) => {\n    const publishDate = post.first_publication_date\n      .split('-')\n      .slice(0, 2)\n      .join('/')\n    const filterDate = `${year}/${month}`\n    return filterDate === publishDate\n  })\n\nconst sortByCategory = (posts, category) => {\n  return posts.filter((post) => {\n    return post.data.categories.find(\n      ({ relatedcategory }) =>\n        relatedcategory.data.category_name.toLowerCase() === category\n    )\n  })\n}\n\nconst sortPosts = (posts, category, year, month) => {\n  let filteredData = posts\n  if (category) filteredData = sortByCategory(filteredData, category)\n  if (year && month) filteredData = sortByDate(filteredData, year, month)\n  return filteredData\n}\n\nexport { sortByDate, sortByCategory, sortPosts }\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Informer from '../components/Informer'\n\nconst Page404 = () => {\n  const navigate = useNavigate()\n  const [time, setTime] = useState(5)\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTime((actualTime) => actualTime - 1)\n    }, 1000)\n    return () => clearInterval(intervalId)\n  }, [])\n\n  useEffect(() => {\n    if (time === 0) navigate('/')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [time])\n\n  return (\n    <Informer>\n      <p>{'Ooops! Something went wrong :/ .... Looks like page your are looking for doesn\\t exist!'}</p>\n      <p>{`You will be automatically redirected to home page in ${time} s`}</p>\n    </Informer>\n  )\n}\n\nexport default Page404\n","import PageRoutes from './PageRoutes'\n\nexport default PageRoutes\n","import React from 'react'\n\nimport { Routes, Route } from 'react-router-dom'\nimport Article from '../../views/Article'\nimport Home from '../../views/Home'\nimport FilteredPosts from '../../views/FilteredPosts'\nimport Page404 from '../../views/Page404'\nimport PropTypes from 'prop-types'\n\nconst PageRoutes = ({ location }) => {\n  return (\n    <Routes location={location}>\n      <Route\n        path={'/'}\n        element={<Home />}\n      />\n      <Route\n        path={'/articles/:article'}\n        element={<Article />}\n      />\n      <Route\n        path={'/pages/:page'}\n        element={<FilteredPosts />}\n      >\n        <Route\n          path={'categories/:category'}\n          element={<FilteredPosts />}\n        />\n        <Route\n          path={'published/:year/:month'}\n          element={<FilteredPosts />}\n        />\n        <Route\n          path={'categories/:category/published/:year/:month'}\n          element={<FilteredPosts />}\n        />\n      </Route>\n      <Route\n        path={'*'}\n        element={<Page404 />}\n      />\n    </Routes>\n  )\n}\n\nPageRoutes.propTypes = {\n  location: PropTypes.object\n}\nexport default PageRoutes\n","import styled from 'styled-components'\n\nconst DefaultStyledAnimatedRoutes = styled.div`\n  &.page-animation {\n    &-enter {\n      transition: ${props => props.time || 1}ms opacity;\n      opacity: 0;\n    }\n    &-enter-active {\n      opacity: 1;\n    }\n    &-exit {\n      display: none;\n    }\n  }\n`\n\nconst StyledAnimatedRoutes = styled(DefaultStyledAnimatedRoutes)(({ style }) => style)\n\nexport { StyledAnimatedRoutes }\n","import AnimatedRoutes from './AnimatedRoutes'\n\nexport default AnimatedRoutes\n","import React from 'react'\nimport PageRoutes from '../PageRoutes'\nimport { useLocation } from 'react-router-dom'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { StyledAnimatedRoutes } from './AnimatedRoutes.styled'\n\nconst AnimatedRoutes = () => {\n  const location = useLocation()\n  const animationTime = 1000\n  return (\n    <TransitionGroup>\n      <CSSTransition\n        classNames={'page-animation'}\n        timeout={animationTime}\n        key={location.key}\n      >\n        <StyledAnimatedRoutes time={animationTime}>\n          <PageRoutes location={location}/>\n        </StyledAnimatedRoutes>\n      </CSSTransition>\n    </TransitionGroup>\n  )\n}\n\nexport default AnimatedRoutes\n","import React from 'react'\n\nimport { ThemeProvider } from 'styled-components'\nimport themeSettings from './theme'\nimport AnimatedRoutes from './components/AnimatedRoutes'\nexport const App = () => {\n  return (\n    <ThemeProvider theme={themeSettings}>\n      <AnimatedRoutes/>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import * as prismic from '@prismicio/client'\n\nexport const repositoryName = 'blog-by-mateusz-suplewski'\n\nexport const client = prismic.createClient(repositoryName, {\n  accessToken: '',\n\n  routes: [\n    {\n      type: 'post',\n      path: '/articles'\n    }\n  ]\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { PrismicProvider } from '@prismicio/react'\nimport { client } from './prismic'\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <PrismicProvider client={client}>\n        <App />\n      </PrismicProvider>\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}